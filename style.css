:root {
    --max-width : 1200px;
    --clr-neutral-900: hsl(0, 0%, 0%);
    --clr-neutral-300: hsl(240, 6%, 90%);
    --clr-neutral-200: hsl(200, 27%, 98%);
    --clr-neutral-100: hsl(0, 0%, 100%);
}


/*********************** CSS RESET ***************************/
/*
  1. Use a more-intuitive box-sizing model.
*/
*, *::before, *::after {
    box-sizing: border-box;
  }
  /*
    2. Remove default margin
  */
  * {
    margin: 0;
  }
  /*
    Typographic tweaks!
    3. Add accessible line-height
    4. Improve text rendering
  */
  body {
    line-height: 1.5;
    -webkit-font-smoothing: antialiased;
  }
  /*
    5. Improve media defaults
  */
  img, picture, video, canvas, svg {
    display: block;
    max-width: 100%;
  }
  /*
    6. Remove built-in form typography styles
  */
  input, button, textarea, select {
    font: inherit;
  }
  /*
    7. Avoid text overflows
  */
  p, h1, h2, h3, h4, h5, h6 {
    overflow-wrap: break-word;
  }
  /*
    8. Create a root stacking context
  */
  #root, #__next {
    isolation: isolate;
  }
/**************************************************************/

header {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem;
    box-shadow: 0px 0px 1px black;
    width: 100vw;
}


header > nav {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 90vw;
    max-width: var(--max-width);
}

header > nav span {
    font-family: "Workbench", sans-serif;
    font-optical-sizing: auto;
    font-weight: 400;
    font-size: 24pt;
    font-style: normal;
    font-variation-settings:
        "BLED" 0,
        "SCAN" 0;
}

header > nav > .nav-items {
    display: flex;
    justify-content: center;
    align-items: center;
}


header > nav > .nav-items > div a {
  text-decoration: none;
  color: black;
}

header > nav > .nav-items > div a:link {
  color: black;
}

header > nav > .nav-items > div a i {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 50px;
  width: 50px;
  border-style: none;
  border-radius: 100%;
  background-color: var(--clr-neutral-200);
}

header > nav > .nav-items > div a i:active,
header > nav > .nav-items > div a i:hover,
#close-btn:hover, #close-btn:active {
  background-color: var(--clr-neutral-300);
}

main {
    display: grid;
    grid-template-columns: clamp(90vw, var(--max-width));
    grid-template-rows: 1fr;
    justify-content: center;
    align-items: center;
    font-family: "Rubik", sans-serif;
    font-optical-sizing: auto;
    font-style: normal;
}

main > * {
    width: 90vw;
    max-width: var(--max-width);
    grid-column: 1 span;
}

main > .actions {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;
    padding: 1rem;
}


main > .actions > #add-book-btn {
  background-color: var(--clr-neutral-900);
  color: white;
  border-style: none;
  border-radius: 5px;
  padding-inline: 1.5rem;
  padding-block: 0.75rem;
  font-size: 1.2rem;
}

main > #book-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, clamp(150px, 200px, 300px) );
    justify-content: center;
    padding: 1rem;
    gap: 1rem;
}

main > #book-list .book-item {
    border-radius: 10px;
    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.212);
}

main > #book-list .book-image {
    border-radius: 10px 10px 0 0;
    height: 150px;
    background-color: grey;
    background-image: url('https://wallpapersmug.com/large/1be1d7/swirl-abstract-art.jpg');
}

main > #book-list .book-info {
   padding: 1rem;
}

main > #book-list .book-info > .card-footer {
  display: flex;
  justify-content: space-between;
  padding-top: 1rem;
}

main > #book-list .book-info > .card-footer > #delete-btn {
 border-style: none;
 background-color: transparent;
 color: tomato;
}

main > #book-list .book-info > .card-footer > .read-check {
  display: flex;
  gap: 8px;
  align-items: center;
}


dialog::backdrop{
  background-color: black;
  opacity: 0.4;
}

dialog {
  align-self: center;
  justify-self: center;
  max-width: 350px;
  min-width: 300px;
  border-style: none;
  border-radius: 5px;
  padding: 2rem;
  box-shadow: 0 0 6px grey;
}

dialog .header {
  padding-bottom: 1rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}

#book-form {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr;
}

#book-form > div {
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: 1fr 25px;
}

#book-form > div > div{
  display: flex;
  flex-direction: column;
}

#book-form > div:nth-last-child(-n+2) {
  display: flex;
  gap: 0.5rem;
}

#book-form div:last-child {
  justify-content: center;
  width: 100%;
  padding-top: 1rem;
}

dialog button {
  border-style: none;
  background: transparent;
  padding-inline: 2rem;
  padding-block: 0.5rem;
  width: 100%;
}

dialog button#dialogAddBtn {
  border-style: none;
  background: var(--clr-neutral-900);
  color: var(--clr-neutral-100);
  border-radius: 5px;
}

dialog button#close-btn {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 50px;
  width: 50px;
  border-style: none;
  border-radius: 100%;
  padding: 0;
}

#book-form > div > .err-msg {
  padding: 0px;
  color: tomato;
  font-size: small;
}

input, button {
  appearance: none;
}

button:hover {
  cursor: pointer;
}

input:not([type=checkbox]) {
  border: 1px solid var(--clr-neutral-300);
  border-radius: 5px;
  padding: 0.5rem;
  transition: ease-in-out 0.1s;
}

input:not([type=checkbox]):hover, input:not([type=checkbox]):focus, input:not([type=checkbox]):active {
  border: 1px solid rgb(230, 230, 230);
  outline: none;
  box-shadow: 0px 0px 0px 5px var(--clr-neutral-300) ;
}

input[type=checkbox] {
  border: 1px solid rgb(228, 228, 228);
  padding: 0.6rem;
  background-color: #fff;
  margin: 0;
  width: 0.5rem;
  height: 0.5rem;
  display: grid;
  place-content: center;

}

input[type=checkbox]::before {
  content: '';
  background-color: var(--clr-neutral-900);
  width: 0.8rem;
  height: 0.8rem;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  transform-origin: center;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
}

input[type=checkbox]:checked::before{
  transform: scale(1);
}

input[type="checkbox"]:disabled {
  color: var(--clr-neutral-300);
  cursor: not-allowed;
}